import { Component, ViewChild, inject } from '@angular/core';
import { FormBuilder, FormControl, Validators } from '@angular/forms';
import { T{{properCase name}}, {{zodSchema}} } from '@repo/mx-schema';
import { ControlsOf } from '../../../../shared/utils/form-controls-of';


@Component({
  selector: '{{name}}-form',
  templateUrl: './{{name}}-form.component.html',
})
export class {{properCase name}}FormComponent {

  showErrors = false;
  {{zodSchema}} = {{zodSchema}}

  private fb = inject(FormBuilder);

  {{name}}Form = this.fb.nonNullable.group<ControlsOf<T{{properCase name}}>>({
    {{#each schemaValue.properties}}
    {{@key}}: new FormControl(null, {
      validators: [
      {{#if this.required}}Validators.required,{{/if}}
      {{#if this.minLength}}Validators.minLength({{this.minLength}}){{/if}}
      ],
      nonNullable: true,
    }),
    {{/each}}
  });

  get formControls() {
    return this.{{name}}Form.controls;
  }

  isInValid() {
    return this.{{name}}Form.invalid;
  }

  setShowErrors(value = true) {
    this.showErrors = value;
  }

  getFormValue() {
    return this.{{name}}Form.value;
  }

  reset() {
    this.{{name}}Form.reset();
  }

  patchValue(value) {
    this.{{name}}Form.patchValue(value);
  }


}
